{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","title","id","completed","classNames","TodoList","todos","map","username","getUser","userId","usersFromServer","find","maxId","arr","newId","forEach","element","App","useState","text","setText","targetUser","setTargetUser","correctList","setCorrectList","isErrorText","setIsErrorText","isErrorTargetUser","setIsErrorTargetUser","action","method","onSubmit","event","preventDefault","Boolean","trim","newTodo","state","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.72a8d2bf.chunk.js","sourcesContent":["import React from 'react';\n\nimport { User } from '../../type/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { Todo } from '../../type/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    title,\n    id,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={\n        classNames(\n          'TodoInfo',\n          {\n            'TodoInfo--completed': completed,\n          },\n        )\n      }\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../type/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { useState } from 'react';\n\nimport './App.scss';\n\nimport { Todo } from './type/Todo';\nimport { User } from './type/User';\n\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUser(userId: number): User | null {\n  const findUser = usersFromServer.find(\n    user => user.id === userId,\n  );\n\n  return findUser || null;\n}\n\nconst todos: Todo[] = todosFromServer.map(\n  todo => ({\n    ...todo,\n    user: getUser(todo.userId) || null,\n  }),\n);\n\nfunction maxId(arr: Todo[]): number {\n  let newId = 0;\n\n  arr.forEach((element: Todo) => {\n    if (element.id > newId) {\n      newId = element.id + 1;\n    }\n  });\n\n  return newId;\n}\n\nexport const App: React.FC = () => {\n  const [text, setText] = useState('');\n  const [targetUser, setTargetUser] = useState('');\n  const [correctList, setCorrectList] = useState([...todos]);\n  const [isErrorText, setIsErrorText] = useState(true);\n  const [isErrorTargetUser, setIsErrorTargetUser] = useState(true);\n\n  const titleFunc = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (!text.trim()) {\n      setIsErrorText(true);\n    }\n\n    setText(event.target.value);\n  };\n\n  const selectFunc = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    if (!targetUser) {\n      setIsErrorTargetUser(true);\n    }\n\n    setTargetUser(event.target.value);\n  };\n\n  function submitForm(\n    event: React.FormEvent<HTMLFormElement>,\n  ) {\n    event.preventDefault();\n\n    setIsErrorTargetUser(Boolean(targetUser));\n    setIsErrorText(Boolean(text.trim()));\n\n    const newTodo: Todo = {\n      id: maxId(correctList),\n      title: text,\n      completed: false,\n      userId: +targetUser,\n      user: getUser(+targetUser),\n    };\n\n    if (targetUser && text.trim()) {\n      setCorrectList((state) => [...state, newTodo]);\n      setText('');\n      setTargetUser('');\n      setIsErrorText(true);\n      setIsErrorTargetUser(true);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={submitForm}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Please enter a title\"\n            value={text}\n            onChange={titleFunc}\n          />\n          {(!isErrorText)\n            && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={targetUser}\n            onChange={selectFunc}\n          >\n            <option value=\"\" disabled>Choose a user</option>\n\n            {usersFromServer.map(user => (\n              <option value={user.id} key={user.id}>{user.name}</option>\n            ))}\n          </select>\n\n          {(!isErrorTargetUser)\n            && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={correctList} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}